//
//  Tasks.cpp
//  Module5Lesson4
//
//  Created by MacBook Air on 14.09.2023.
//

/* Напиши программу, которая спрашивает “Уроки сделаны?”, если пользователь отвечает “y”- программа выводит на экран “Молодец!”. Во всех остальных случаях выводит “Иди учись!”. */

#include <stdio.h>
#include <iostream>

using namespace std;

int main() {

    double answer;

    std::cout << "2 + 2 = ?  \n";
    std::cin >> answer;

    if (answer == 4) {
        cout << "Верно \n";
    } else {
        cout << "Ошибка \n";
    }
}

/* Напиши программу, которая запрашивает у пользователя число и сообщает, если оно отрицательное, выводит сообщение “Число <введенное число>- отрицательное.” иначе выводит сообщение “Число <введенное число>- положительное.”
*/
using namespace std;

int main() {

    int num;

    std::cout << "Введи число: ";
    std::cin >> num;

    if (num < 0) {
            std::cout << "Число " << num << " - отрицательное." << std::endl;
        } else {
            std::cout << "Число " << num << " - положительное." << std::endl;
        }
}

/* Напиши программу, которая запрашивает у пользователя число и сообщает, если оно чётное, выводит сообщение “Число <введенное число>- чётное.” иначе выводит сообщение “Число <введенное число>- нечётное.” */


int main() {

    int num;

    std::cout << "Введи число: ";
    std::cin >> num;

    if (num % 2 == 0 ) {
            std::cout << "Число " << num << " - чётное." << std::endl;
        } else {
            std::cout << "Число " << num << " - нечётное." << std::endl;
        }
}

/* Напиши программу, которая запрашивает у пользователя количество очков (натуральное число), если количество очков больше или равно 10, то программа выводит на экран “Ты победил!”, иначе выводит “Ты проиграл!”. */

int main() {

    int points;

    std::cout << "Количество очков: ";
    std::cin >> points;

    if (points >= 10) {
        std::cout << "Ты победил!";
        } else {
            std::cout << "Ты проиграл!";
        }
}

/* Напиши программу, которая запрашивает у пользователя три угла в треугольнике (три целых числа) и определяет возможность существования треугольника с такими углами. Если такой треугольник может существовать, то программа выводит на экран “Треугольник существует.” иначе выводит сообщение “Треугольник не существует.” */

int main() {
    int angle1, angle2, angle3;

    std::cout << "Введите первый угол треугольника: ";
    std::cin >> angle1;

    std::cout << "Введите второй угол треугольника: ";
    std::cin >> angle2;

    std::cout << "Введите третий угол треугольника: ";
    std::cin >> angle3;

    // Может ли треугольник существовать
    if (angle1 + angle2 + angle3 == 180) {
        std::cout << "Треугольник существует.";
    } else {
        std::cout << "Треугольник не существует.";
    }

    return 0;
}

/* Напиши программу для решения квадратного уравнения вида a*x*x+b*x+c=0, программа запрашивает коэффициенты a, b, c. Если корни есть, программа должна их вывести в формате:
 “x1=значение
  x2=значение”
Если корней нет — вывести сообщение “Корней нет”.

Используй функцию sqrt(x)- квадратный корень из x
Для использования функции sqrt() нужно подключить библиотеку < math.h> */

//int main() {
//
//}

/* Напиши программу, которая запрашивает у пользователя три числа и выводит среднее из них, то есть, то которое меньше одного, но больше другого */

int main() {
    setlocale(LC_ALL, "ru");

    int num1, num2, num3;

    std::cout << "Первое число?  \n";
    std::cin >> num1;

    std::cout << "Первое число?  \n";
    std::cin >> num2;

    std::cout << "Первое число?  \n";
    std::cin >> num3;

    int result;
    result = (num1 + num2 + num3) / 3;
    std::cout << result << "\n";

}

/* Напиши программу, которая запрашивает длины трех сторон треугольника (три целых числа). По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника, составленного из этих отрезков. Если такой треугольник существует, то определить, является ли он равносторонним, равнобедренным или равносторонним. Если треугольник с такими длинами не может существовать — вывести сообщение “Треугольник не существует”. */

int main() {
    setlocale(LC_ALL, "ru");

    int side1, side2, side3;

    std::cout << "Первое число?  \n";
    std::cin >> side1;

    std::cout << "Первое число?  \n";
    std::cin >> side2;

    std::cout << "Первое число?  \n";
    std::cin >> side3;


        if (side1 + side2 > side3 && side1 + side3 > side2 && side2 + side3 > side1) {
            std::cout << "Треугольник существует." << std::endl;


            if (side1 == side2 && side2 == side3) {
                std::cout << "Треугольник равносторонний." << std::endl;
            } else if (side1 == side2 || side1 == side3 || side2 == side3) {
                std::cout << "Треугольник равнобедренный." << std::endl;
            } else {
                std::cout << "Треугольник разносторонний." << std::endl;
            }
        } else {
            std::cout << "Треугольник не существует." << std::endl;
        }

        return 0;
    }


/* Напиши программу, которая запрашивает год у пользователя (целое число) и определяет високосный он или нет. Если високосный — вывести сообщение “Високосный”, иначе вывести “Не високосный” (Високосные года делятся нацело на 4. Однако из этого правила есть исключение: столетия, которые не делятся нацело на 400, високосными не являются.). */


int main() {
    setlocale(LC_ALL, "ru");
    int year;

    std::cout << "Введите год: ";
    std::cin >> year;

    if ((year % 4 == 0) || (year % 400 == 0)) {
        std::cout << "Високосный";
    } else {
        std::cout << "Не високосный";
    }
        return 0;
    }


/* Напиши программу, которая запрашивает у пользователя ввод символа и определяет буква это (буква английского алфавита a-z, A-Z) или символ. Программа должна вывести "Это буква” или “Это не буква, а символ” */

#include <cctype> // Для использования функций isalpha()

int main() {
    setlocale(LC_ALL, "ru");
    char symbol;

    std::cout << "Введите симол: ";
    std::cin >> symbol;

    if (std::isalpha(symbol)) {
        std::cout << "Это буква." << std::endl;
    } else {
        std::cout << "Это не буква, а символ." << std::endl;
    }

}



/* 2.  Напиши программу, которая запрашивает число и определяет, заканчивается ли оно на 5. Если введенное число заканчивается на 5- программа выводит “+”, иначе выводит “-”.
*/

int main() {

    int number;

    std::cout << "Enter a number  \n";
    std::cin >> number;

        if (number % 10 == 5) {
            std::cout << "+ \n";
        } else {
            std::cout << "- \n";
        }
}

/* Напиши программу, которая спрашивает “Уроки сделаны?”, если пользователь отвечает “y”- программа выводит на экран “Молодец!”. Во всех остальных случаях выводит “Иди учись!”.  */

int main() {
    setlocale(LC_ALL, "ru");
    std::string str;

    std::cout << "Уроки сделаны?  \n";
    std::cin >> str;

    if (str == "y") {
        std::cout << "Молодец \n";
    } else {
        std::cout << "Иди учись!  \n";
    }
}


/* Напиши программу, которая рассчитывает передвижение шахматной фигуры «ладья». Данная фигура ходит по горизонтали и вертикали на любое количество клеток. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты местонахождения ладьи в данный момент (номер строки и столбца), два других числа — координаты клетки, в которую необходимо переместить фигуру (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если из первой клетки ходом ладьи можно попасть во вторую, иначе — "Нет".  */

#include <cstdlib> // abs()

int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты начальной клетки (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты конечной клетки (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;


    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        if (x1 == x2 || y1 == y2) {
            std::cout << "Да";
        } else {
            std::cout << "Нет";
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}

/* Напиши программу, которая рассчитывает передвижение шахматной фигуры «король». Данная фигура ходит по горизонтали, вертикали или диагонали на одну клетку. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты местонахождения короля в данный момент (номер строки и столбца), Два других числа — координаты клетки, в которую необходимо переместить фигуру (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если из первой клетки ходом короля можно попасть во вторую, иначе — "Нет". */


int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты местонахождения короля (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты клетки, в которую необходимо переместить короля (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;

    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        int dx = std::abs(x1 - x2);
        int dy = std::abs(y1 - y2);
        if (dx <= 1 && dy <= 1) {
            std::cout << "Да";
        } else {
            std::cout << "Нет";
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}



/* Напиши программу, которая рассчитывает передвижение шахматной фигуры «слон». Данная фигура ходит по диагонали на любое количество клеток. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты местонахождения слона в данный момент (номер строки и столбца), Два других числа — координаты клетки, в которую необходимо переместить фигуру (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если из первой клетки ходом слона можно попасть во вторую, иначе — "Нет" */


int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты местонахождения слона (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты клетки, в которую необходимо переместить слона (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;

    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        int dx = std::abs(x1 - x2);
        int dy = std::abs(y1 - y2);
        if (dx == dy) {
            std::cout << "Да" << std::endl;
        } else {
            std::cout << "Нет" << std::endl;
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}

/* Напиши программу, которая рассчитывает передвижение шахматной фигуры  «ферзь». Данная фигура ходит по диагонали, горизонтали и вертикали на любое количество клеток. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты местонахождения ферзя в данный момент (номер строки и столбца), два вторых числа — координаты клетки, в которую необходимо переместить фигуру (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если из первой клетки ходом ферзя можно попасть во вторую, иначе — "Нет".  */


int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты местонахождения ферзя (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты клетки, в которую необходимо переместить ферзя (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;

    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        int dx = std::abs(x1 - x2);
        int dy = std::abs(y1 - y2);

        if (x1 == x2 || y1 == y2 || dx == dy) {
            std::cout << "Да" << std::endl;
        } else {
            std::cout << "Нет" << std::endl;
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}

/* Напиши программу, которая рассчитывает передвижение шахматной фигуры  «конь». Данная фигура ходит буквой «Г», т.е. две клетки по вертикали в любую из сторон, затем 1 клетку по горизонтали и наоборот. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты местонахождения коня в данный момент (номер строки и столбца), два других числа — координаты клетки, в которую необходимо переместить фигуру (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если из первой клетки ходом коня можно попасть во вторую, иначе — "Нет". */


int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты местонахождения коня (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты клетки, в которую необходимо переместить коня (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;

    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        int dx = std::abs(x1 - x2);
        int dy = std::abs(y1 - y2);

        if ((dx == 1 && dy == 2) || (dx == 2 && dy == 1)) {
            std::cout << "Да" << std::endl;
        } else {
            std::cout << "Нет" << std::endl;
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}


/* Напиши программу, которая определяет окрашены ли выбранные клетки доски в один цвет или в разные. Программа запрашивает четыре числа от 1 до 8 каждое. Первые два числа — задают координаты первой клетки (номер строки и столбца), вторые — координаты второй клетки (гарантируется, что клетки не совпадают). Программа должна вывести "Да", если выбранные клетки одинакового цвета, иначе — "Нет". */

int main() {
    int x1, y1, x2, y2;

    std::cout << "Введите координаты первой клетки (строка столбец от 1 до 8): ";
    std::cin >> x1 >> y1;

    std::cout << "Введите координаты второй клетки (строка столбец от 1 до 8): ";
    std::cin >> x2 >> y2;

    // Проверка допустимости ввода координат
    if ((x1 >= 1 && x1 <= 8) && (y1 >= 1 && y1 <= 8) && (x2 >= 1 && x2 <= 8) && (y2 >= 1 && y2 <= 8)) {
        // Проверка цветов клеток
        if ((x1 + y1) % 2 == (x2 + y2) % 2) {
            std::cout << "Да" << std::endl;
        } else {
            std::cout << "Нет" << std::endl;
        }
    } else {
        std::cout << "Недопустимые координаты. Введите координаты от 1 до 8." << std::endl;
    }

    return 0;
}




